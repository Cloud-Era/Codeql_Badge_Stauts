import os
import requests
import json

def create_pr_with_workflow_status_badge(owner, repo, token):
    headers = {
        'Authorization': f"Bearer {token}",
        'Accept': "application/vnd.github.v3+json"
    }

    # Get the current content of the README file
    readme_url = f"https://api.github.com/repos/{owner}/{repo}/readme"
    response = requests.get(readme_url, headers=headers)
    readme_content = response.json()

    # Extract the README content and decode it from base64
    readme_text = base64.b64decode(readme_content['content']).decode('utf-8')

    # Append the workflow status badge markdown to the README content
    workflow_badge = "[![Your Workflow Status](https://github.com/{owner}/{repo}/workflows/Your-Workflow-Name/badge.svg)](https://github.com/{owner}/{repo}/actions)"
    new_readme_text = f"{readme_text}\n{workflow_badge}"

    # Encode the new README content to base64
    encoded_new_readme = base64.b64encode(new_readme_text.encode('utf-8')).decode('utf-8')

    # Create a new branch for the changes
    branch_name = "add-workflow-status-badge"
    branch_url = f"https://api.github.com/repos/{owner}/{repo}/git/refs"
    branch_payload = {
        "ref": f"refs/heads/{branch_name}",
        "sha": readme_content['sha']
    }
    response = requests.post(branch_url, headers=headers, data=json.dumps(branch_payload))

    # Create a new commit with the updated README content
    commit_url = f"https://api.github.com/repos/{owner}/{repo}/contents/README.md"
    commit_payload = {
        "message": "Add workflow status badge to README",
        "content": encoded_new_readme,
        "sha": readme_content['sha'],
        "branch": branch_name
    }
    response = requests.put(commit_url, headers=headers, data=json.dumps(commit_payload))

    # Create a pull request
    pr_url = f"https://api.github.com/repos/{owner}/{repo}/pulls"
    pr_payload = {
        "title": "Add workflow status badge",
        "body": "Adds a workflow status badge to the README file.",
        "head": branch_name,
        "base": "main"
    }
    response = requests.post(pr_url, headers=headers, data=json.dumps(pr_payload))

    if response.status_code == 201:
        print(f"Pull request created successfully for {owner}/{repo}")
    else:
        print(f"Failed to create pull request for {owner}/{repo}: {response.text}")

def main():
    # Replace these values with your GitHub personal access token and the repositories you want to update
    token = "YOUR_GITHUB_TOKEN"
    owner_repo_pairs = [
        {"owner": "owner1", "repo": "repo1"},
        {"owner": "owner2", "repo": "repo2"}
    ]

    for pair in owner_repo_pairs:
        create_pr_with_workflow_status_badge(pair["owner"], pair["repo"], token)

if __name__ == "__main__":
    main()
