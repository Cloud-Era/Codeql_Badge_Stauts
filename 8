import os
import requests
import base64

# GitHub personal access token
access_token = os.getenv('GITHUB_TOKEN')

# GitHub organization name
org_name = 'your_organization_name'

# GitHub repository name
repo_name = 'your_repository_name'

# CODEQL badge markdown
codeql_badge_markdown = '[![CODEQL](https://img.shields.io/badge/CODEQL-passing-brightgreen)](https://github.com/{org}/{repo}/actions/workflows/codeql.yml)'

def get_default_branch():
    headers = {
        'Accept': 'application/vnd.github.v3+json',
        'Authorization': f'Bearer {access_token}'
    }
    response = requests.get(f'https://api.github.com/repos/{org_name}/{repo_name}', headers=headers)
    if response.status_code == 200:
        return response.json()['default_branch']
    else:
        print(f"Error retrieving default branch: {response.text}")
        return None

def get_latest_commit_sha(branch_name):
    headers = {
        'Accept': 'application/vnd.github.v3+json',
        'Authorization': f'Bearer {access_token}'
    }
    response = requests.get(f'https://api.github.com/repos/{org_name}/{repo_name}/branches/{branch_name}', headers=headers)
    if response.status_code == 200:
        return response.json()['commit']['sha']
    else:
        print(f"Error retrieving latest commit SHA: {response.text}")
        return None

def update_readme_with_codeql_badge(branch_name):
    headers = {
        'Accept': 'application/vnd.github.v3+json',
        'Authorization': f'Bearer {access_token}'
    }

    # Update README in the branch
    readme_path = "README.md"
    response = requests.get(f'https://api.github.com/repos/{org_name}/{repo_name}/contents/{readme_path}?ref={branch_name}', headers=headers)
    if response.status_code != 200:
        print(f"Error retrieving README from branch '{branch_name}': {response.text}")
        return

    readme_content = base64.b64decode(response.json()['content']).decode('utf-8')
    if 'CODEQL' not in readme_content:
        new_readme_content = readme_content + '\n\n' + codeql_badge_markdown

        data = {
            "message": "Add CODEQL workflow status badge",
            "content": base64.b64encode(new_readme_content.encode('utf-8')).decode('utf-8'),
            "sha": response.json()['sha'],
            "branch": branch_name
        }
        response = requests.put(f'https://api.github.com/repos/{org_name}/{repo_name}/contents/{readme_path}', headers=headers, json=data)
        if response.status_code != 200:
            print(f"Error updating README in branch '{branch_name}': {response.text}")
            return
        print(f"CODEQL badge added to README in branch '{branch_name}'.")

    else:
        print(f"CODEQL badge already exists in README in branch '{branch_name}', skipping...")

if __name__ == "__main__":
    default_branch = get_default_branch()
    if not default_branch:
        print("Error: Default branch not found.")
        exit()

    new_branch_name = "add-codeql-workflow-badge"
    latest_commit_sha = get_latest_commit_sha(new_branch_name)
    if latest_commit_sha:
        print(f"Branch '{new_branch_name}' already exists. Updating README...")
        update_readme_with_codeql_badge(new_branch_name)
    else:
        print(f"Branch '{new_branch_name}' does not exist.")
